{"version":3,"sources":["components/LocationSearch.js","components/Loader.js","components/LocationData.js","components/UnitToggle.js","components/App.js","index.js"],"names":["LocationSearch","onSearchLocation","useState","term","setTerm","className","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","Loader","LocationData","data","metric","degreeSymbol","String","fromCodePoint","parseInt","location","name","country","current","weather_descriptions","temperature","src","weather_icons","alt","UnitToggle","onToggle","onClick","App","setLocation","setMetric","weatherData","setWeatherData","useEffect","a","axios","get","process","response","ReactDOM","render","document","querySelector"],"mappings":"iPA4BeA,EA1BQ,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAAuB,EACvBC,mBAAS,IADc,mBACxCC,EADwC,KAClCC,EADkC,KAS/C,OACE,6BACE,0BAAMC,UAAU,iBAAiBC,SARhB,SAAAC,GACnBA,EAAEC,iBACFP,EAAiBE,GACjBC,EAAQ,MAMJ,yBAAKC,UAAU,YACb,2BACEI,SAAU,SAAAF,GAAC,OAAIH,EAAQG,EAAEG,OAAOC,QAChCA,MAAOR,EACPS,KAAK,OACLC,YAAY,uBAGhB,4BAAQR,UAAU,aAAlB,aCVOS,EAVA,WACb,OACE,yBAAKT,UAAU,cACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,kBAAf,8BCmBOU,EAtBM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC5B,IAAKD,EACH,OAAO,kBAAC,EAAD,MAGT,IAAME,EAAeC,OAAOC,cAAcC,SAAS,OAAQ,KAE3D,OACE,6BACE,sCAAQL,EAAKM,SAASC,KAAtB,aAA+BP,EAAKM,SAASE,UAC7C,2BAAIR,EAAKS,QAAQC,sBACjB,qCAAOV,EAAKS,QAAQE,YAApB,YAAmCT,GAAnC,OACED,EAAS,IAAM,MAEjB,yBACEW,IAAKZ,EAAKS,QAAQI,cAAc,GAChCC,IAAG,qBAAgBd,EAAKM,SAASC,UCG1BQ,EApBI,SAAC,GAA0B,IAAxBd,EAAuB,EAAvBA,OAAQe,EAAe,EAAfA,SAC5B,OACE,yBAAK3B,UAAU,cACb,4BACE4B,QAASD,EACT3B,UAAS,oBAAeY,EAAS,SAAW,KAF9C,SAMA,yBAAKZ,UAAU,OACf,4BACE4B,QAASD,EACT3B,UAAS,oBAAeY,EAAS,GAAK,WAFxC,WC0CSiB,EA9CH,WAAO,IAAD,EACgBhC,mBAAS,IADzB,mBACToB,EADS,KACCa,EADD,OAEYjC,oBAAS,GAFrB,mBAETe,EAFS,KAEDmB,EAFC,OAGsBlC,mBAAS,MAH/B,mBAGTmC,EAHS,KAGIC,EAHJ,KAKhBC,qBAAU,WACJjB,GACF,uCAAC,WAAMA,GAAN,eAAAkB,EAAA,sEACwBC,IAAMC,IAAN,yDAVfC,mCAUe,kBAC8CrB,EAD9C,kBAEnBL,EAAS,IAAM,MAHpB,OACO2B,EADP,OAMCN,EAAeM,EAAS5B,MANzB,2CAAD,sDAOGM,KAEJ,CAACA,EAAUL,IAcd,OACE,yBAAKZ,UAAU,gBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,eAAf,cACA,yBAAKA,UAAU,QACb,kBAAC,EAAD,CAAgBJ,iBAjBC,SAAAE,GAAI,OAAIgC,EAAYhC,OAmBvC,yBAAKE,UAAU,cACb,kBAAC,EAAD,CAAY2B,SAlBC,kBAAMI,GAAWnB,IAkBMA,OAAQA,MAGhD,yBAAKZ,UAAU,6BAlBZiB,EAIE,kBAAC,EAAD,CAAcN,KAAMqB,EAAapB,OAAQA,IAHvC,6EC5Bb4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.faae58cb.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst LocationSearch = ({ onSearchLocation }) => {\n  const [term, setTerm] = useState('');\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    onSearchLocation(term);\n    setTerm('');\n  };\n\n  return (\n    <div>\n      <form className=\"ui action form\" onSubmit={onFormSubmit}>\n        <div className=\"ui input\">\n          <input\n            onChange={e => setTerm(e.target.value)}\n            value={term}\n            type=\"text\"\n            placeholder=\"Enter Location...\"\n          />\n        </div>\n        <button className=\"ui button\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LocationSearch;\n","import React from 'react';\n\nconst Loader = () => {\n  return (\n    <div className=\"ui segment\">\n      <div className=\"ui active inverted dimmer\">\n        <div className=\"ui text loader\">Loading weather data...</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport Loader from './Loader';\n\nconst LocationData = ({ data, metric }) => {\n  if (!data) {\n    return <Loader />;\n  }\n\n  const degreeSymbol = String.fromCodePoint(parseInt('00B0', 16));\n\n  return (\n    <div>\n      <h2>{`${data.location.name}, ${data.location.country}`}</h2>\n      <p>{data.current.weather_descriptions}</p>\n      <p>{`${data.current.temperature} ${degreeSymbol}${\n        metric ? 'C' : 'F'\n      }`}</p>\n      <img\n        src={data.current.weather_icons[0]}\n        alt={`Weather in ${data.location.name}`}\n      />\n    </div>\n  );\n};\n\nexport default LocationData;\n","import React from 'react';\n\nconst UnitToggle = ({ metric, onToggle }) => {\n  return (\n    <div className=\"ui buttons\">\n      <button\n        onClick={onToggle}\n        className={`ui button ${metric ? 'active' : ''}`}\n      >\n        &deg;C\n      </button>\n      <div className=\"or\"></div>\n      <button\n        onClick={onToggle}\n        className={`ui button ${metric ? '' : 'active'}`}\n      >\n        &deg;F\n      </button>\n    </div>\n  );\n};\n\nexport default UnitToggle;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport LocationSearch from './LocationSearch';\nimport LocationData from './LocationData';\nimport UnitToggle from './UnitToggle';\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst App = () => {\n  const [location, setLocation] = useState('');\n  const [metric, setMetric] = useState(true);\n  const [weatherData, setWeatherData] = useState(null);\n\n  useEffect(() => {\n    if (location) {\n      (async location => {\n        const response = await axios.get(\n          `http://api.weatherstack.com/current?access_key=${API_KEY}&query=${location}&units=${\n            metric ? 'm' : 'f'\n          }`\n        );\n        setWeatherData(response.data);\n      })(location);\n    }\n  }, [location, metric]);\n\n  const onSearchLocation = term => setLocation(term);\n\n  const onUnitToggle = () => setMetric(!metric);\n\n  const showContent = () => {\n    if (!location) {\n      return <h2>Search for a location to get weather data.</h2>;\n    }\n\n    return <LocationData data={weatherData} metric={metric} />;\n  };\n\n  return (\n    <div className=\"ui container\">\n      <div className=\"ui menu\">\n        <div className=\"header item\">WeatherApp</div>\n        <div className=\"item\">\n          <LocationSearch onSearchLocation={onSearchLocation} />\n        </div>\n        <div className=\"right item\">\n          <UnitToggle onToggle={onUnitToggle} metric={metric} />\n        </div>\n      </div>\n      <div className=\"ui center aligned segment\">{showContent()}</div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}